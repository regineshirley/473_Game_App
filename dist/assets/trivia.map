{"version":3,"sources":["vendor/ember-cli/app-prefix.js","trivia/adapters/application.js","trivia/app.js","trivia/components/a-websocket.js","trivia/components/fa-icon.js","trivia/components/fa-list.js","trivia/components/fa-stack.js","trivia/components/radio-button.js","trivia/components/torii-iframe-placeholder.js","trivia/components/welcome-page.js","trivia/components/x-option.js","trivia/components/x-select.js","trivia/controllers/application.js","trivia/controllers/cards.js","trivia/controllers/players.js","trivia/controllers/players/new.js","trivia/controllers/room.js","trivia/helpers/app-version.js","trivia/helpers/pluralize.js","trivia/helpers/singularize.js","trivia/initializers/app-version.js","trivia/initializers/container-debug-adapter.js","trivia/initializers/data-adapter.js","trivia/initializers/ember-data.js","trivia/initializers/emberfire.js","trivia/initializers/export-application-global.js","trivia/initializers/initialize-torii-callback.js","trivia/initializers/initialize-torii-session.js","trivia/initializers/initialize-torii.js","trivia/initializers/injectStore.js","trivia/initializers/store.js","trivia/initializers/transforms.js","trivia/instance-initializers/ember-data.js","trivia/instance-initializers/setup-routes.js","trivia/instance-initializers/walk-providers.js","trivia/models/card.js","trivia/models/player.js","trivia/resolver.js","trivia/router.js","trivia/routes/application.js","trivia/routes/cards.js","trivia/routes/index.js","trivia/routes/login.js","trivia/routes/player.js","trivia/routes/player/index.js","trivia/routes/players.js","trivia/routes/players/index.js","trivia/routes/players/new.js","trivia/routes/room.js","trivia/routes/rooms.js","trivia/routes/rooms/index.js","trivia/routes/rooms/new.js","trivia/services/ajax.js","trivia/services/firebase-app.js","trivia/services/firebase.js","trivia/services/popup.js","trivia/services/socket-io.js","trivia/services/torii-session.js","trivia/services/torii.js","trivia/services/websockets.js","trivia/templates/application.js","trivia/templates/cards.js","trivia/templates/components/a-websocket.js","trivia/templates/components/x-select.js","trivia/templates/index.js","trivia/templates/login.js","trivia/templates/player.js","trivia/templates/player/index.js","trivia/templates/players.js","trivia/templates/players/index.js","trivia/templates/players/new.js","trivia/templates/room.js","trivia/templates/rooms.js","trivia/templates/rooms/index.js","trivia/templates/rooms/new.js","trivia/torii-adapters/application.js","trivia/torii-providers/firebase.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-config.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n\n\n","define('trivia/adapters/application', ['exports', 'ember', 'emberfire/adapters/firebase'], function (exports, _ember, _emberfireAdaptersFirebase) {\n  var inject = _ember['default'].inject;\n  exports['default'] = _emberfireAdaptersFirebase['default'].extend({\n    firebase: inject.service()\n  });\n});","define('trivia/app', ['exports', 'ember', 'trivia/resolver', 'ember-load-initializers', 'trivia/config/environment'], function (exports, _ember, _triviaResolver, _emberLoadInitializers, _triviaConfigEnvironment) {\n\n  var App = undefined;\n\n  _ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = _ember['default'].Application.extend({\n    modulePrefix: _triviaConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _triviaConfigEnvironment['default'].podModulePrefix,\n    Resolver: _triviaResolver['default']\n  });\n\n  (0, _emberLoadInitializers['default'])(App, _triviaConfigEnvironment['default'].modulePrefix);\n\n  exports['default'] = App;\n});","define('trivia/components/a-websocket', ['exports', 'ember'], function (exports, _ember) {\n\n  // Tries to parse JSON\n  function isJSON(str) {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n\n  exports['default'] = _ember['default'].Component.extend({\n    /*\n      1. First step you need to do is inject the websockets service into your object.\n    */\n    websockets: _ember['default'].inject.service(),\n    socketRef: null,\n    firebaseApp: _ember['default'].inject.service(),\n    questions: [],\n    answer: [],\n    a: [],\n    b: [],\n    c: [],\n    d: [],\n\n    didInsertElement: function didInsertElement() {\n      this._super.apply(this, arguments);\n\n      /*\n        2. The next step you need to do is to create your actual websocket. Calling socketFor\n        will retrieve a cached websocket if one exists or in this case it\n        will create a new one for us.\n      */\n      var socket = this.get('websockets').socketFor('ws://localhost:3001/');\n\n      /*\n        3. The next step is to define your event handlers. All event handlers\n        are added via the `on` method and take 3 arguments: event name, callback\n        function, and the context in which to invoke the callback. All 3 arguments\n        are required.\n      */\n      socket.on('open', this.myOpenHandler, this);\n      socket.on('message', this.myMessageHandler, this);\n      socket.on('close', this.myCloseHandler, this);\n\n      this.set('socketRef', socket);\n    },\n\n    willDestroyElement: function willDestroyElement() {\n      this._super.apply(this, arguments);\n\n      var socket = this.get('socketRef');\n\n      /*\n        4. The final step is to remove all of the listeners you have setup.\n      */\n      socket.off('open', this.myOpenHandler);\n      socket.off('message', this.myMessageHandler);\n      socket.off('close', this.myCloseHandler);\n    },\n\n    myOpenHandler: function myOpenHandler(event) {\n      console.log('On open event has been called: ' + event);\n    },\n\n    myMessageHandler: function myMessageHandler(event) {\n      // Attempt to parse the string for JSON\n      if (isJSON(event.data)) {\n        var obj = JSON.parse(event.data);\n        console.log(obj);\n\n        // Starts change of card\n        if (obj.action === 'new_card') {\n          //this.actions.changeCard(obj.data); // changeCard is action in a-websocket\n          //remove question in 'questions' array before new question loads\n          this.get('questions').popObject();\n          this.get('answer').popObject();\n          this.get('a').popObject();\n          this.get('b').popObject();\n          this.get('c').popObject();\n          this.get('d').popObject();\n          this.grab(obj.data);\n\n          console.log('Changing card to ' + obj.data);\n        }\n      } else {\n        console.log('Message: ' + event.data); // Not JSON, so just print String\n      }\n    },\n\n    grab: function grab(card_id) {\n      var fire = this.get('firebaseApp');\n      var database = fire.database();\n      var question, a, b, c, d, answer;\n\n      //query QUESTIONs from database\n      question = database.ref('cards/' + card_id + '/question');\n      question.on('value', function (snapshot) {\n        question = snapshot.val();\n        console.log('question is ' + snapshot.val());\n      });\n      //add question to 'questions' array\n      this.get('questions').pushObject(question);\n\n      //query ANSWER from database\n      answer = database.ref('cards/' + card_id + '/answer');\n      answer.on('value', function (snapshot) {\n        answer = snapshot.val();\n        console.log('answer is ' + snapshot.val());\n      });\n      //add question to 'answer' array\n      this.get('answer').pushObject(answer);\n\n      //query ANSWER A\n      a = database.ref('cards/' + card_id + '/a');\n      a.on('value', function (snapshot) {\n        a = snapshot.val();\n        console.log('answer a is ' + snapshot.val());\n      });\n      this.get('a').pushObject(a); //add answer a to array 'a'\n\n      //query ANSWER B\n      b = database.ref('cards/' + card_id + '/b');\n      b.on('value', function (snapshot) {\n        b = snapshot.val();\n        console.log('answer b is ' + snapshot.val());\n      });\n      this.get('b').pushObject(b); //add answer b to array 'b'\n\n      //query ANSWER C\n      c = database.ref('cards/' + card_id + '/c');\n      c.on('value', function (snapshot) {\n        c = snapshot.val();\n        console.log('answer c is ' + snapshot.val());\n      });\n      this.get('c').pushObject(c); //add answer c to array 'c'\n\n      //query ANSWER D\n      d = database.ref('cards/' + card_id + '/d');\n      d.on('value', function (snapshot) {\n        d = snapshot.val();\n        console.log('answer d is ' + snapshot.val());\n      });\n      this.get('d').pushObject(d); //add answer c to array 'c'\n    },\n\n    myCloseHandler: function myCloseHandler(event) {\n      console.log('On close event has been called: ' + event);\n    },\n\n    // Eric: This is the action that gets called when the button is pressed\n    actions: {\n      sendButtonPressed: function sendButtonPressed() {\n        var socket = this.get('socketRef');\n        var userAnswer = this.get('user-answer');\n        var cardAnswer = this.get('card-answer');\n\n        if (cardAnswer === userAnswer) {\n          alert('Congratualtions, You got it Correct!');\n        } else {\n          alert('Sorry, That is Incorrect!');\n        }\n\n        var ses = this.get('session');\n\n        //socket.send(`You answered: ${userAnswer}`);\n        var obj = { user: this.email, answer: userAnswer };\n        socket.send(JSON.stringify(obj));\n      }\n      // changeCard(card_id) {\n      //   console.log('Changing card to ' + card_id);\n      //   // TODO: Update view to new card id\n      // }\n    }\n  });\n});","define('trivia/components/fa-icon', ['exports', 'ember-font-awesome/components/fa-icon'], function (exports, _emberFontAwesomeComponentsFaIcon) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberFontAwesomeComponentsFaIcon['default'];\n    }\n  });\n});","define('trivia/components/fa-list', ['exports', 'ember-font-awesome/components/fa-list'], function (exports, _emberFontAwesomeComponentsFaList) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberFontAwesomeComponentsFaList['default'];\n    }\n  });\n});","define('trivia/components/fa-stack', ['exports', 'ember-font-awesome/components/fa-stack'], function (exports, _emberFontAwesomeComponentsFaStack) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberFontAwesomeComponentsFaStack['default'];\n    }\n  });\n});","define('trivia/components/radio-button', ['exports', 'ember-radio-buttons/components/radio-button'], function (exports, _emberRadioButtonsComponentsRadioButton) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberRadioButtonsComponentsRadioButton['default'];\n    }\n  });\n});","define('trivia/components/torii-iframe-placeholder', ['exports', 'torii/components/torii-iframe-placeholder'], function (exports, _toriiComponentsToriiIframePlaceholder) {\n  exports['default'] = _toriiComponentsToriiIframePlaceholder['default'];\n});","define('trivia/components/welcome-page', ['exports', 'ember-welcome-page/components/welcome-page'], function (exports, _emberWelcomePageComponentsWelcomePage) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberWelcomePageComponentsWelcomePage['default'];\n    }\n  });\n});","define('trivia/components/x-option', ['exports', 'emberx-select/components/x-option'], function (exports, _emberxSelectComponentsXOption) {\n  exports['default'] = _emberxSelectComponentsXOption['default'];\n});","define('trivia/components/x-select', ['exports', 'emberx-select/components/x-select'], function (exports, _emberxSelectComponentsXSelect) {\n  exports['default'] = _emberxSelectComponentsXSelect['default'];\n});","define('trivia/controllers/application', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Controller.extend({\n    hideNav: _ember['default'].computed.equal('currentRouteName', 'login')\n  });\n});","define('trivia/controllers/cards', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Controller.extend({\n    actions: {\n      addCard: function addCard() {\n\n        var question = this.get('question');\n        var answer = this.get('answer');\n        var a = this.get('a');\n        var b = this.get('b');\n        var c = this.get('c');\n        var d = this.get('d');\n\n        //create new card\n        var newCard = this.store.createRecord('card', {\n          question: question,\n          answer: answer,\n          a: a,\n          b: b,\n          c: c,\n          d: d\n        });\n\n        // Save to DataBase (firebase.com)\n        newCard.save();\n\n        // Clear Form\n        this.setProperties({\n          question: '',\n          answer: '',\n          a: '',\n          b: '',\n          c: '',\n          d: ''\n        });\n      }\n    }\n  });\n});","define('trivia/controllers/players', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Controller.extend({});\n});","define('trivia/controllers/players/new', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Controller.extend({\n    actions: {\n      addUser: function addUser() {\n        var user = this.get('username');\n        var firstName = this.get('fName');\n        var lastName = this.get('lName');\n        alert('Your last name is ' + lastName);\n\n        //create new player\n        var newPlayer = this.store.createRecord('player', {\n          username: user,\n          firstName: firstName,\n          lastName: lastName\n        });\n\n        // Save to DataBase (firebase.com)\n        newPlayer.save();\n\n        // Clear Form\n        this.setProperties({\n          username: '',\n          fName: '',\n          lName: ''\n        });\n      }\n    }\n  });\n});","define('trivia/controllers/room', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Controller.extend({\n    count: 0,\n    actions: {\n      // Answer is now checked in the a-websocket component\n      //\n      // answerCheck: function(ans) {\n      //   var answer = this.get('choice');\n      //   if (answer === ans) {\n      //     alert('Congratualtions, You got it Correct!');\n      //     this.count += 1;\n      //     console.log(this.count);\n      //     this.send('reloadQuestion');\n      //   } else {\n      //     alert('Sorry, That is Incorrect!');\n      //     this.send('reloadQuestion');\n      //   }\n      // },\n      // reloadQuestion: function() {\n      //   this.send('invalidateModel');\n      // }\n\n      //let trivCard = this.store.createRecord('card');\n      // var question;\n      // this.store.findRecord('card', id).then(function(item){\n      //    alert(item.get('question'));\n      // })\n      //let question = trivCard.question;\n      //alert(this.question);\n      //}\n    }\n  });\n});","define('trivia/helpers/app-version', ['exports', 'ember', 'trivia/config/environment', 'ember-cli-app-version/utils/regexp'], function (exports, _ember, _triviaConfigEnvironment, _emberCliAppVersionUtilsRegexp) {\n  exports.appVersion = appVersion;\n  var version = _triviaConfigEnvironment['default'].APP.version;\n\n  function appVersion(_) {\n    var hash = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    if (hash.hideSha) {\n      return version.match(_emberCliAppVersionUtilsRegexp.versionRegExp)[0];\n    }\n\n    if (hash.hideVersion) {\n      return version.match(_emberCliAppVersionUtilsRegexp.shaRegExp)[0];\n    }\n\n    return version;\n  }\n\n  exports['default'] = _ember['default'].Helper.helper(appVersion);\n});","define('trivia/helpers/pluralize', ['exports', 'ember-inflector/lib/helpers/pluralize'], function (exports, _emberInflectorLibHelpersPluralize) {\n  exports['default'] = _emberInflectorLibHelpersPluralize['default'];\n});","define('trivia/helpers/singularize', ['exports', 'ember-inflector/lib/helpers/singularize'], function (exports, _emberInflectorLibHelpersSingularize) {\n  exports['default'] = _emberInflectorLibHelpersSingularize['default'];\n});","define('trivia/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'trivia/config/environment'], function (exports, _emberCliAppVersionInitializerFactory, _triviaConfigEnvironment) {\n  var _config$APP = _triviaConfigEnvironment['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n  exports['default'] = {\n    name: 'App Version',\n    initialize: (0, _emberCliAppVersionInitializerFactory['default'])(name, version)\n  };\n});","define('trivia/initializers/container-debug-adapter', ['exports', 'ember-resolver/container-debug-adapter'], function (exports, _emberResolverContainerDebugAdapter) {\n  exports['default'] = {\n    name: 'container-debug-adapter',\n\n    initialize: function initialize() {\n      var app = arguments[1] || arguments[0];\n\n      app.register('container-debug-adapter:main', _emberResolverContainerDebugAdapter['default']);\n      app.inject('container-debug-adapter:main', 'namespace', 'application:main');\n    }\n  };\n});","define('trivia/initializers/data-adapter', ['exports', 'ember'], function (exports, _ember) {\n\n  /*\n    This initializer is here to keep backwards compatibility with code depending\n    on the `data-adapter` initializer (before Ember Data was an addon).\n  \n    Should be removed for Ember Data 3.x\n  */\n\n  exports['default'] = {\n    name: 'data-adapter',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define('trivia/initializers/ember-data', ['exports', 'ember-data/setup-container', 'ember-data/index'], function (exports, _emberDataSetupContainer, _emberDataIndex) {\n\n  /*\n  \n    This code initializes Ember-Data onto an Ember application.\n  \n    If an Ember.js developer defines a subclass of DS.Store on their application,\n    as `App.StoreService` (or via a module system that resolves to `service:store`)\n    this code will automatically instantiate it and make it available on the\n    router.\n  \n    Additionally, after an application's controllers have been injected, they will\n    each have the store made available to them.\n  \n    For example, imagine an Ember.js application with the following classes:\n  \n    App.StoreService = DS.Store.extend({\n      adapter: 'custom'\n    });\n  \n    App.PostsController = Ember.Controller.extend({\n      // ...\n    });\n  \n    When the application is initialized, `App.ApplicationStore` will automatically be\n    instantiated, and the instance of `App.PostsController` will have its `store`\n    property set to that instance.\n  \n    Note that this code will only be run if the `ember-application` package is\n    loaded. If Ember Data is being used in an environment other than a\n    typical application (e.g., node.js where only `ember-runtime` is available),\n    this code will be ignored.\n  */\n\n  exports['default'] = {\n    name: 'ember-data',\n    initialize: _emberDataSetupContainer['default']\n  };\n});","define('trivia/initializers/emberfire', ['exports', 'emberfire/initializers/emberfire'], function (exports, _emberfireInitializersEmberfire) {\n  exports['default'] = _emberfireInitializersEmberfire['default'];\n});","define('trivia/initializers/export-application-global', ['exports', 'ember', 'trivia/config/environment'], function (exports, _ember, _triviaConfigEnvironment) {\n  exports.initialize = initialize;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (_triviaConfigEnvironment['default'].exportApplicationGlobal !== false) {\n      var theGlobal;\n      if (typeof window !== 'undefined') {\n        theGlobal = window;\n      } else if (typeof global !== 'undefined') {\n        theGlobal = global;\n      } else if (typeof self !== 'undefined') {\n        theGlobal = self;\n      } else {\n        // no reasonable global, just bail\n        return;\n      }\n\n      var value = _triviaConfigEnvironment['default'].exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = _ember['default'].String.classify(_triviaConfigEnvironment['default'].modulePrefix);\n      }\n\n      if (!theGlobal[globalName]) {\n        theGlobal[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete theGlobal[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n});","define('trivia/initializers/initialize-torii-callback', ['exports', 'torii/redirect-handler'], function (exports, _toriiRedirectHandler) {\n  exports['default'] = {\n    name: 'torii-callback',\n    before: 'torii',\n    initialize: function initialize(application) {\n      if (arguments[1]) {\n        // Ember < 2.1\n        application = arguments[1];\n      }\n      application.deferReadiness();\n      _toriiRedirectHandler['default'].handle(window)['catch'](function () {\n        application.advanceReadiness();\n      });\n    }\n  };\n});","define('trivia/initializers/initialize-torii-session', ['exports', 'torii/bootstrap/session', 'torii/configuration'], function (exports, _toriiBootstrapSession, _toriiConfiguration) {\n  exports['default'] = {\n    name: 'torii-session',\n    after: 'torii',\n\n    initialize: function initialize(application) {\n      if (arguments[1]) {\n        // Ember < 2.1\n        application = arguments[1];\n      }\n      var configuration = (0, _toriiConfiguration.getConfiguration)();\n      if (!configuration.sessionServiceName) {\n        return;\n      }\n\n      (0, _toriiBootstrapSession['default'])(application, configuration.sessionServiceName);\n\n      var sessionFactoryName = 'service:' + configuration.sessionServiceName;\n      application.inject('adapter', configuration.sessionServiceName, sessionFactoryName);\n    }\n  };\n});","define('trivia/initializers/initialize-torii', ['exports', 'torii/bootstrap/torii', 'torii/configuration', 'trivia/config/environment'], function (exports, _toriiBootstrapTorii, _toriiConfiguration, _triviaConfigEnvironment) {\n\n  var initializer = {\n    name: 'torii',\n    initialize: function initialize(application) {\n      if (arguments[1]) {\n        // Ember < 2.1\n        application = arguments[1];\n      }\n      (0, _toriiConfiguration.configure)(_triviaConfigEnvironment['default'].torii || {});\n      (0, _toriiBootstrapTorii['default'])(application);\n      application.inject('route', 'torii', 'service:torii');\n    }\n  };\n\n  exports['default'] = initializer;\n});","define('trivia/initializers/injectStore', ['exports', 'ember'], function (exports, _ember) {\n\n  /*\n    This initializer is here to keep backwards compatibility with code depending\n    on the `injectStore` initializer (before Ember Data was an addon).\n  \n    Should be removed for Ember Data 3.x\n  */\n\n  exports['default'] = {\n    name: 'injectStore',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define('trivia/initializers/store', ['exports', 'ember'], function (exports, _ember) {\n\n  /*\n    This initializer is here to keep backwards compatibility with code depending\n    on the `store` initializer (before Ember Data was an addon).\n  \n    Should be removed for Ember Data 3.x\n  */\n\n  exports['default'] = {\n    name: 'store',\n    after: 'ember-data',\n    initialize: function initialize() {}\n  };\n});","define('trivia/initializers/transforms', ['exports', 'ember'], function (exports, _ember) {\n\n  /*\n    This initializer is here to keep backwards compatibility with code depending\n    on the `transforms` initializer (before Ember Data was an addon).\n  \n    Should be removed for Ember Data 3.x\n  */\n\n  exports['default'] = {\n    name: 'transforms',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define(\"trivia/instance-initializers/ember-data\", [\"exports\", \"ember-data/-private/instance-initializers/initialize-store-service\"], function (exports, _emberDataPrivateInstanceInitializersInitializeStoreService) {\n  exports[\"default\"] = {\n    name: \"ember-data\",\n    initialize: _emberDataPrivateInstanceInitializersInitializeStoreService[\"default\"]\n  };\n});","define('trivia/instance-initializers/setup-routes', ['exports', 'torii/bootstrap/routing', 'torii/configuration', 'torii/router-dsl-ext'], function (exports, _toriiBootstrapRouting, _toriiConfiguration, _toriiRouterDslExt) {\n  exports['default'] = {\n    name: 'torii-setup-routes',\n    initialize: function initialize(applicationInstance, registry) {\n      var configuration = (0, _toriiConfiguration.getConfiguration)();\n\n      if (!configuration.sessionServiceName) {\n        return;\n      }\n\n      var router = applicationInstance.get('router');\n      var setupRoutes = function setupRoutes() {\n        var authenticatedRoutes = router.router.authenticatedRoutes;\n        var hasAuthenticatedRoutes = !Ember.isEmpty(authenticatedRoutes);\n        if (hasAuthenticatedRoutes) {\n          (0, _toriiBootstrapRouting['default'])(applicationInstance, authenticatedRoutes);\n        }\n        router.off('willTransition', setupRoutes);\n      };\n      router.on('willTransition', setupRoutes);\n    }\n  };\n});","define('trivia/instance-initializers/walk-providers', ['exports', 'torii/lib/container-utils', 'torii/configuration'], function (exports, _toriiLibContainerUtils, _toriiConfiguration) {\n  exports['default'] = {\n    name: 'torii-walk-providers',\n    initialize: function initialize(applicationInstance) {\n      var configuration = (0, _toriiConfiguration.getConfiguration)();\n      // Walk all configured providers and eagerly instantiate\n      // them. This gives providers with initialization side effects\n      // like facebook-connect a chance to load up assets.\n      for (var key in configuration.providers) {\n        if (configuration.providers.hasOwnProperty(key)) {\n          (0, _toriiLibContainerUtils.lookup)(applicationInstance, 'torii-provider:' + key);\n        }\n      }\n    }\n  };\n});","define('trivia/models/card', ['exports', 'ember-data', 'ember'], function (exports, _emberData, _ember) {\n  exports['default'] = _emberData['default'].Model.extend({\n    question: _emberData['default'].attr('string'),\n    a: _emberData['default'].attr('string'),\n    b: _emberData['default'].attr('string'),\n    c: _emberData['default'].attr('string'),\n    d: _emberData['default'].attr('string'),\n    answer: _emberData['default'].attr('string'),\n    // This attribute is computed from other attributes\n    // Returns the text belonging to the letter saved in 'answer'\n    reveal: _ember['default'].computed('answer', function () {\n      return '' + this.get(this.get('answer'));\n    })\n  });\n});","define('trivia/models/player', ['exports', 'ember-data'], function (exports, _emberData) {\n  exports['default'] = _emberData['default'].Model.extend({\n    username: _emberData['default'].attr('string'),\n    firstName: _emberData['default'].attr('string'),\n    lastName: _emberData['default'].attr('string')\n  });\n});","define('trivia/resolver', ['exports', 'ember-resolver'], function (exports, _emberResolver) {\n  exports['default'] = _emberResolver['default'];\n});","define('trivia/router', ['exports', 'ember', 'trivia/config/environment'], function (exports, _ember, _triviaConfigEnvironment) {\n\n  var Router = _ember['default'].Router.extend({\n    location: _triviaConfigEnvironment['default'].locationType,\n    rootURL: _triviaConfigEnvironment['default'].rootURL\n  });\n\n  Router.map(function () {\n    this.route('room');\n    this.route('rooms', function () {\n      this.route('new');\n    });\n    this.route('players', function () {\n      this.route('new');\n    });\n    this.route('player', function () {});\n    this.route('cards');\n    this.route('login');\n    this.route('welcomepage');\n  });\n\n  exports['default'] = Router;\n});","define('trivia/routes/application', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Route.extend({\n    beforeModel: function beforeModel() {\n      return this.get('session').fetch()['catch'](function () {});\n    },\n    actions: {\n      signIn: function signIn(provider) {\n        this.get('session').open('firebase', {\n          provider: 'github',\n          settings: {\n            scope: 'user'\n          }\n        }).then(function (data) {\n          console.log(data.currentUser);\n        });\n      },\n      signOut: function signOut() {\n        this.get('session').close();\n        this.transitionTo('index');\n      }\n    }\n  });\n});","define('trivia/routes/cards', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Route.extend({\n    model: function model() {\n      return this.store.findAll('card');\n    }\n  });\n});","define('trivia/routes/index', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Route.extend({});\n});","define('trivia/routes/login', ['exports', 'ember', 'firebase'], function (exports, _ember, _firebase) {\n  exports['default'] = _ember['default'].Route.extend({\n    firebaseApp: _ember['default'].inject.service(),\n\n    beforeModel: function beforeModel() {\n      var ref = this.get('firebaseApp').auth();\n\n      //if no user logged in, will redirect to login page.\n      ref.onAuthStateChanged((function (user) {\n        if (user) {\n          this.transitionTo('room');\n        }\n      }).bind(this));\n    },\n\n    actions: {\n      login: function login() {\n        var controller = this.get('controller');\n        var email = controller.get('email');\n        var pass = controller.get('password');\n        var ref = this.get('firebaseApp').auth();\n\n        return ref.signInWithEmailAndPassword(email, pass)['catch'](function (error) {\n          console.log('Sign In error', error);\n        }).then((function () {\n          ref.onAuthStateChanged(function (user) {\n            console.log('user', user);\n          });\n        }).bind(this));\n      },\n\n      github: function github() {\n        var ref = this.get('firebaseApp').auth();\n        var provider = new _firebase['default'].auth.GithubAuthProvider();\n\n        provider.addScope('profile');\n        provider.addScope('user');\n\n        return ref.signInWithPopup(provider).then((function (result) {\n          var token = result.credential.accessToken;\n          var user = result.user;\n\n          this.transitionTo('room');\n          ref.onAuthStateChanged(function (user) {\n            console.log('user ', user);\n          });\n        }).bind(this))['catch'](function (error) {\n          console.log(error.code);\n        });\n      }\n    }\n\n  });\n});","define('trivia/routes/player', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Route.extend({});\n});","define('trivia/routes/player/index', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Route.extend({});\n});","define('trivia/routes/players', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Route.extend({});\n});","define('trivia/routes/players/index', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Route.extend({\n    model: function model() {\n      return this.store.findAll('player');\n    }\n  });\n});","define('trivia/routes/players/new', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Route.extend({});\n});","define('trivia/routes/room', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Route.extend({\n\n    firebaseApp: _ember['default'].inject.service(),\n    beforeModel: function beforeModel() {\n      var ref = this.get('firebaseApp').auth();\n\n      //if no user logged in, will redirect to login page.\n      ref.onAuthStateChanged((function (user) {\n        if (!user) {\n          this.transitionTo('login');\n        }\n      }).bind(this));\n    },\n\n    model: function model(id) {\n      //return this.store.findAll('card'); // this returns all the questions\n      console.log('id is ' + id);\n      var triviaCard = this.store.findAll('card').then(function (item) {\n\n        // change the multiplicative number at the end to\n        // the number of questions we have in database\n        var randomIndex = Math.floor(Math.random() * 3);\n        var newCard = item.objectAt(randomIndex);\n\n        return [newCard];\n      });\n\n      return triviaCard;\n    },\n    actions: {\n      invalidateModel: function invalidateModel() {\n        this.refresh();\n      }\n    }\n  });\n});","define('trivia/routes/rooms', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Route.extend({});\n});","define('trivia/routes/rooms/index', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Route.extend({});\n});","define('trivia/routes/rooms/new', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Route.extend({});\n});","define('trivia/services/ajax', ['exports', 'ember-ajax/services/ajax'], function (exports, _emberAjaxServicesAjax) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberAjaxServicesAjax['default'];\n    }\n  });\n});","define('trivia/services/firebase-app', ['exports', 'emberfire/services/firebase-app'], function (exports, _emberfireServicesFirebaseApp) {\n  exports['default'] = _emberfireServicesFirebaseApp['default'];\n});","define('trivia/services/firebase', ['exports', 'emberfire/services/firebase'], function (exports, _emberfireServicesFirebase) {\n  exports['default'] = _emberfireServicesFirebase['default'];\n});","define('trivia/services/popup', ['exports', 'torii/services/popup'], function (exports, _toriiServicesPopup) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _toriiServicesPopup['default'];\n    }\n  });\n});","define('trivia/services/socket-io', ['exports', 'ember-websockets/services/socket-io'], function (exports, _emberWebsocketsServicesSocketIo) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberWebsocketsServicesSocketIo['default'];\n    }\n  });\n});","define('trivia/services/torii-session', ['exports', 'torii/services/session'], function (exports, _toriiServicesSession) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _toriiServicesSession['default'];\n    }\n  });\n});","define('trivia/services/torii', ['exports', 'torii/services/torii'], function (exports, _toriiServicesTorii) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _toriiServicesTorii['default'];\n    }\n  });\n});","define('trivia/services/websockets', ['exports', 'ember-websockets/services/websockets'], function (exports, _emberWebsocketsServicesWebsockets) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberWebsocketsServicesWebsockets['default'];\n    }\n  });\n});","define(\"trivia/templates/application\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"drKv5yUx\", \"block\": \"{\\\"statements\\\":[[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"unless\\\"],[[\\\"get\\\",[\\\"hideNav\\\"]]],null,8],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"container\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"outlet\\\"]],false],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[{\\\"statements\\\":[[\\\"text\\\",\\\"            \\\"],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"btn btn-default navbar-btn\\\"],[\\\"modifier\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"signIn\\\",\\\"github\\\"]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Sign in with \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"fa-icon\\\"],[\\\"github\\\"],null],false],[\\\"text\\\",\\\" GitHub\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"text\\\",\\\"            \\\"],[\\\"open-element\\\",\\\"p\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"navbar-text\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Logged in as \\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"session\\\",\\\"currentUser\\\",\\\"displayName\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n            \\\"],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"btn btn-default navbar-btn\\\"],[\\\"modifier\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"signOut\\\"]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Sign out\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"text\\\",\\\"Rooms\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"text\\\",\\\"New player\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"text\\\",\\\"Cards\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"text\\\",\\\"Players\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"text\\\",\\\"(Master) Room\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"open-element\\\",\\\"a\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"navbar-brand\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Trivia\\\"],[\\\"close-element\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"open-element\\\",\\\"header\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"nav\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"navbar navbar-default\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"container-fluid\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"comment\\\",\\\" Brand and toggle get grouped for better mobile display \\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"navbar-header\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"static-attr\\\",\\\"type\\\",\\\"button\\\"],[\\\"static-attr\\\",\\\"class\\\",\\\"navbar-toggle collapsed\\\"],[\\\"static-attr\\\",\\\"data-toggle\\\",\\\"collapse\\\"],[\\\"static-attr\\\",\\\"data-target\\\",\\\"#top-navbar-collapse\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"span\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"sr-only\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Toggle navigation\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"span\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"icon-bar\\\"],[\\\"flush-element\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"span\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"icon-bar\\\"],[\\\"flush-element\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"span\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"icon-bar\\\"],[\\\"flush-element\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"block\\\",[\\\"link-to\\\"],[\\\"index\\\"],null,7],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"comment\\\",\\\" Collect the nav links, forms, and other content for toggling \\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"collapse navbar-collapse\\\"],[\\\"static-attr\\\",\\\"id\\\",\\\"top-navbar-collapse\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"ul\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"nav navbar-nav\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"li\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n            \\\"],[\\\"block\\\",[\\\"link-to\\\"],[\\\"room\\\"],null,6],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"li\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n            \\\"],[\\\"block\\\",[\\\"link-to\\\"],[\\\"players\\\"],null,5],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"ul\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"nav navbar-nav navbar-right\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"li\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"dropdown\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n            \\\"],[\\\"open-element\\\",\\\"a\\\",[]],[\\\"static-attr\\\",\\\"href\\\",\\\"#\\\"],[\\\"static-attr\\\",\\\"class\\\",\\\"dropdown-toggle\\\"],[\\\"static-attr\\\",\\\"data-toggle\\\",\\\"dropdown\\\"],[\\\"static-attr\\\",\\\"role\\\",\\\"button\\\"],[\\\"static-attr\\\",\\\"aria-haspopup\\\",\\\"true\\\"],[\\\"static-attr\\\",\\\"aria-expanded\\\",\\\"false\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Dev Menu \\\"],[\\\"open-element\\\",\\\"span\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"caret\\\"],[\\\"flush-element\\\"],[\\\"close-element\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n            \\\"],[\\\"open-element\\\",\\\"ul\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"dropdown-menu\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n              \\\"],[\\\"open-element\\\",\\\"li\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"dropdown-header\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Data\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n              \\\"],[\\\"open-element\\\",\\\"li\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n                \\\"],[\\\"block\\\",[\\\"link-to\\\"],[\\\"cards\\\"],null,4],[\\\"text\\\",\\\"\\\\n              \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n              \\\"],[\\\"open-element\\\",\\\"li\\\",[]],[\\\"static-attr\\\",\\\"role\\\",\\\"separator\\\"],[\\\"static-attr\\\",\\\"class\\\",\\\"divider\\\"],[\\\"flush-element\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n              \\\"],[\\\"open-element\\\",\\\"li\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"dropdown-header\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Unused Routes\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n              \\\"],[\\\"open-element\\\",\\\"li\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n                \\\"],[\\\"block\\\",[\\\"link-to\\\"],[\\\"players.new\\\"],null,3],[\\\"text\\\",\\\"\\\\n              \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n              \\\"],[\\\"open-element\\\",\\\"li\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n                \\\"],[\\\"block\\\",[\\\"link-to\\\"],[\\\"rooms\\\"],null,2],[\\\"text\\\",\\\"\\\\n              \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n            \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"if\\\"],[[\\\"get\\\",[\\\"session\\\",\\\"isAuthenticated\\\"]]],null,1,0],[\\\"text\\\",\\\"        \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"close-element\\\"],[\\\"comment\\\",\\\" /.navbar-collapse \\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"comment\\\",\\\" /.container-fluid \\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[]}],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"trivia/templates/application.hbs\" } });\n});","define(\"trivia/templates/cards\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"MouLFDqe\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"panel panel-default\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"table\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"table\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"thead\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"tr\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"th\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"ID\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"th\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Question\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"th\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Anwswer\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"th\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"A\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"th\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"B\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"th\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"C\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"th\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"D\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"tbody\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"each\\\"],[[\\\"get\\\",[\\\"model\\\"]]],null,0],[\\\"text\\\",\\\"    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\\n\\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"panel panel-default\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"panel-heading\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Add a Card\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"panel-body\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"p\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"If you feel the need to add more, add from \\\"],[\\\"open-element\\\",\\\"a\\\",[]],[\\\"static-attr\\\",\\\"href\\\",\\\"https://pastebin.com/raw/QRGzxxEy\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"here\\\"],[\\\"close-element\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"form\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"form-group\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"label\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Question\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"input\\\"],null,[[\\\"type\\\",\\\"class\\\",\\\"value\\\"],[\\\"text\\\",\\\"form-control\\\",[\\\"get\\\",[\\\"question\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"form-group\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"label\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Answer (lower-case letter: a b c d)\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"input\\\"],null,[[\\\"type\\\",\\\"class\\\",\\\"value\\\"],[\\\"text\\\",\\\"form-control\\\",[\\\"get\\\",[\\\"answer\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"form-group\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"label\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"A\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"input\\\"],null,[[\\\"type\\\",\\\"class\\\",\\\"value\\\"],[\\\"text\\\",\\\"form-control\\\",[\\\"get\\\",[\\\"a\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"form-group\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"label\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"B\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"input\\\"],null,[[\\\"type\\\",\\\"class\\\",\\\"value\\\"],[\\\"text\\\",\\\"form-control\\\",[\\\"get\\\",[\\\"b\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"form-group\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"label\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"C\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"input\\\"],null,[[\\\"type\\\",\\\"class\\\",\\\"value\\\"],[\\\"text\\\",\\\"form-control\\\",[\\\"get\\\",[\\\"c\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"form-group\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"label\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"D\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"input\\\"],null,[[\\\"type\\\",\\\"class\\\",\\\"value\\\"],[\\\"text\\\",\\\"form-control\\\",[\\\"get\\\",[\\\"d\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"btn btn-primary\\\"],[\\\"modifier\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"addCard\\\"]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Submit\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\\n\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"outlet\\\"]],false],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[{\\\"statements\\\":[[\\\"text\\\",\\\"        \\\"],[\\\"open-element\\\",\\\"tr\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"td\\\",[]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"card\\\",\\\"id\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"td\\\",[]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"card\\\",\\\"question\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"td\\\",[]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"card\\\",\\\"answer\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"td\\\",[]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"card\\\",\\\"a\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"td\\\",[]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"card\\\",\\\"b\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"td\\\",[]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"card\\\",\\\"c\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"td\\\",[]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"card\\\",\\\"d\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"card\\\"]}],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"trivia/templates/cards.hbs\" } });\n});","define(\"trivia/templates/components/a-websocket\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"YPV8BtsV\", \"block\": \"{\\\"statements\\\":[[\\\"comment\\\",\\\" Eric: This is the button for the a-websocket component \\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"comment\\\",\\\" I'm not sure if this is in the ideal location \\\"],[\\\"text\\\",\\\"\\\\n\\\\n\\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"mainbox\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"form\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"triviaForm\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"row\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"each\\\"],[[\\\"get\\\",[\\\"questions\\\"]]],null,4],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"btn btn-block btn-primary\\\"],[\\\"modifier\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"sendButtonPressed\\\"]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n        WebSocket Submit\\\\n      \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"open-element\\\",\\\"p\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Your email: \\\"],[\\\"append\\\",[\\\"get\\\",[null,\\\"email\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\\n\\\"],[\\\"yield\\\",\\\"default\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[\\\"default\\\"],\\\"blocks\\\":[{\\\"statements\\\":[[\\\"text\\\",\\\"        \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"radio\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"label\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n            \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"radio-button\\\"],null,[[\\\"value\\\",\\\"checked\\\"],[\\\"d\\\",[\\\"get\\\",[\\\"choice\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n            \\\"],[\\\"append\\\",[\\\"get\\\",[\\\"answerD\\\"]],false],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"answerD\\\"]},{\\\"statements\\\":[[\\\"text\\\",\\\"        \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"radio\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"label\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n            \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"radio-button\\\"],null,[[\\\"value\\\",\\\"checked\\\"],[\\\"c\\\",[\\\"get\\\",[\\\"choice\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n            \\\"],[\\\"append\\\",[\\\"get\\\",[\\\"answerC\\\"]],false],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"answerC\\\"]},{\\\"statements\\\":[[\\\"text\\\",\\\"        \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"radio\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"label\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n            \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"radio-button\\\"],null,[[\\\"value\\\",\\\"checked\\\"],[\\\"b\\\",[\\\"get\\\",[\\\"choice\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n            \\\"],[\\\"append\\\",[\\\"get\\\",[\\\"answerB\\\"]],false],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"answerB\\\"]},{\\\"statements\\\":[[\\\"text\\\",\\\"        \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"radio\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"label\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n            \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"radio-button\\\"],null,[[\\\"value\\\",\\\"checked\\\"],[\\\"a\\\",[\\\"get\\\",[\\\"choice\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n            \\\"],[\\\"append\\\",[\\\"get\\\",[\\\"answerA\\\"]],false],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"answerA\\\"]},{\\\"statements\\\":[[\\\"text\\\",\\\"      \\\"],[\\\"open-element\\\",\\\"h4\\\",[]],[\\\"flush-element\\\"],[\\\"open-element\\\",\\\"b\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Question:\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\" \\\"],[\\\"append\\\",[\\\"get\\\",[\\\"question\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"ul\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"each\\\"],[[\\\"get\\\",[\\\"a\\\"]]],null,3],[\\\"block\\\",[\\\"each\\\"],[[\\\"get\\\",[\\\"b\\\"]]],null,2],[\\\"block\\\",[\\\"each\\\"],[[\\\"get\\\",[\\\"c\\\"]]],null,1],[\\\"block\\\",[\\\"each\\\"],[[\\\"get\\\",[\\\"d\\\"]]],null,0],[\\\"text\\\",\\\"      \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"question\\\"]}],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"trivia/templates/components/a-websocket.hbs\" } });\n});","define('trivia/templates/components/x-select', ['exports', 'emberx-select/templates/components/x-select'], function (exports, _emberxSelectTemplatesComponentsXSelect) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberxSelectTemplatesComponentsXSelect['default'];\n    }\n  });\n});","define(\"trivia/templates/index\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"knKdMUet\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"h1\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Welcome to Trivia\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\\n\\\"],[\\\"block\\\",[\\\"if\\\"],[[\\\"get\\\",[\\\"session\\\",\\\"isAuthenticated\\\"]]],null,0],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"outlet\\\"]],false],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[{\\\"statements\\\":[[\\\"text\\\",\\\"  Thank you for signing up and logging in.\\\\n\\\"]],\\\"locals\\\":[]}],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"trivia/templates/index.hbs\" } });\n});","define(\"trivia/templates/login\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"Alhzr0w6\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"container\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\\n    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"panel-heading\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"h3\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Welcome\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\\n    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"panel-body\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"form\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"if\\\"],[[\\\"get\\\",[\\\"session\\\",\\\"isAuthenticated\\\"]]],null,1,0],[\\\"text\\\",\\\"      \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[{\\\"statements\\\":[[\\\"text\\\",\\\"          \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"form-group\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n            \\\"],[\\\"open-element\\\",\\\"label\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Email\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\" \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"input\\\"],null,[[\\\"type\\\",\\\"class\\\",\\\"value\\\",\\\"placeholder\\\",\\\"required\\\"],[\\\"email\\\",\\\"form-control\\\",[\\\"get\\\",[\\\"email\\\"]],\\\"me@example.com\\\",true]]],false],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"form-group\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n            \\\"],[\\\"open-element\\\",\\\"label\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Password\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\" \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"input\\\"],null,[[\\\"type\\\",\\\"class\\\",\\\"value\\\",\\\"placeholder\\\",\\\"required\\\"],[\\\"password\\\",\\\"form-control\\\",[\\\"get\\\",[\\\"password\\\"]],\\\"Password\\\",true]]],false],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"btn btn-success\\\"],[\\\"modifier\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"login\\\"]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Log In\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\\n          \\\"],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"btn btn-primary\\\"],[\\\"modifier\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"github\\\"]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Login with Github\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"comment\\\",\\\"  <button class=\\\\\\\"btn btn-danger\\\\\\\" {{action 'logout'}}>Log Out</button> \\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"text\\\",\\\"          \\\"],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"btn btn-danger\\\"],[\\\"modifier\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"logout\\\"]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Log Out\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\\n\\\"]],\\\"locals\\\":[]}],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"trivia/templates/login.hbs\" } });\n});","define(\"trivia/templates/player\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"VNFMBXDQ\", \"block\": \"{\\\"statements\\\":[[\\\"append\\\",[\\\"unknown\\\",[\\\"outlet\\\"]],false],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"trivia/templates/player.hbs\" } });\n});","define(\"trivia/templates/player/index\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"lDzzy5q5\", \"block\": \"{\\\"statements\\\":[[\\\"append\\\",[\\\"unknown\\\",[\\\"outlet\\\"]],false],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"trivia/templates/player/index.hbs\" } });\n});","define(\"trivia/templates/players\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"0iJ/3zD9\", \"block\": \"{\\\"statements\\\":[[\\\"append\\\",[\\\"unknown\\\",[\\\"outlet\\\"]],false],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"trivia/templates/players.hbs\" } });\n});","define(\"trivia/templates/players/index\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"Lx5LGxY5\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"h1\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Players\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"each\\\"],[[\\\"get\\\",[\\\"model\\\"]]],null,0],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"outlet\\\"]],false],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[{\\\"statements\\\":[[\\\"text\\\",\\\"    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"well\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"h4\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"ID: \\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"player\\\",\\\"id\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"h5\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Username: \\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"player\\\",\\\"username\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"h5\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"First Name: \\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"player\\\",\\\"firstName\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"h5\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Last Name: \\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"player\\\",\\\"lastName\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"h5\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Score: \\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"player\\\",\\\"score\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"player\\\"]}],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"trivia/templates/players/index.hbs\" } });\n});","define(\"trivia/templates/players/new\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"a+RVSp2r\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"h3\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Register now to play!\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"open-element\\\",\\\"form\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"form-group\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"label\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Username\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"input\\\"],null,[[\\\"type\\\",\\\"class\\\",\\\"value\\\",\\\"placeholder\\\"],[\\\"text\\\",\\\"form-control\\\",[\\\"get\\\",[\\\"username\\\"]],\\\"Enter your username\\\"]]],false],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"form-group\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"label\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"First Name\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"input\\\"],null,[[\\\"type\\\",\\\"class\\\",\\\"value\\\",\\\"placeholder\\\"],[\\\"text\\\",\\\"form-control\\\",[\\\"get\\\",[\\\"fName\\\"]],\\\"Enter your first name\\\"]]],false],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"form-group\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"label\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Last Name\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"input\\\"],null,[[\\\"type\\\",\\\"class\\\",\\\"value\\\",\\\"placeholder\\\"],[\\\"text\\\",\\\"form-control\\\",[\\\"get\\\",[\\\"lName\\\"]],\\\"Enter your last name\\\"]]],false],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"btn btn-primary\\\"],[\\\"modifier\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"addUser\\\"]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Submit\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\\n\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"outlet\\\"]],false],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"trivia/templates/players/new.hbs\" } });\n});","define(\"trivia/templates/room\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"zy3c5yzD\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"h1\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Welcome to the Triva Room!\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"open-element\\\",\\\"br\\\",[]],[\\\"flush-element\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"comment\\\",\\\" <div class = \\\\\\\"mainbox\\\\\\\">\\\\n<form class=\\\\\\\"triviaForm\\\\\\\">\\\\n  <div class=\\\\\\\"row\\\\\\\">\\\\n{{#each model as |card|}}\\\\n      <h4><b>Question:</b> {{card.question}}</h4>\\\\n      <ul>\\\\n        <div class=\\\\\\\"radio\\\\\\\">\\\\n          <label>\\\\n            <input type=\\\\\\\"radio\\\\\\\" name=\\\\\\\"choice\\\\\\\" value=\\\\\\\"a\\\\\\\">{{card.a}}\\\\n            {{radio-button value='a' checked=choice}}\\\\n            {{card.a}}\\\\n          </label>\\\\n        </div>\\\\n        <div class=\\\\\\\"radio\\\\\\\">\\\\n          <label>\\\\n            {{radio-button value='b' checked=choice}}\\\\n            {{card.b}}\\\\n          </label>\\\\n        </div>\\\\n        <div class=\\\\\\\"radio\\\\\\\">\\\\n          <label>\\\\n            {{radio-button value='c' checked=choice}}\\\\n            {{card.c}}\\\\n          </label>\\\\n        </div>\\\\n        <div class=\\\\\\\"radio\\\\\\\">\\\\n          <label>\\\\n            {{radio-button value='d' checked=choice}}\\\\n            {{card.d}}\\\\n          </label>\\\\n        </div>\\\\n      </ul>\\\\n    <button {{action 'answerCheck' card.answer}} class=\\\\\\\"btn btn-primary\\\\\\\">Submit</button>\\\\n    {{a-websocket card-answer=card.answer user-answer=choice email=session.currentUser.email}}\\\\n    {{/each}}\\\\n  </div>\\\\n</form>\\\\n</div> \\\"],[\\\"text\\\",\\\"\\\\n\\\\n\\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"a-websocket\\\"],null,[[\\\"card-answer\\\",\\\"user-answer\\\",\\\"email\\\"],[[\\\"get\\\",[\\\"answer\\\"]],[\\\"get\\\",[\\\"choice\\\"]],[\\\"get\\\",[\\\"session\\\",\\\"currentUser\\\",\\\"email\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n\\\\n\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"outlet\\\"]],false],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"trivia/templates/room.hbs\" } });\n});","define(\"trivia/templates/rooms\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"u1Hv7jiy\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"h1\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Rooms\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\\n\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"outlet\\\"]],false],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"trivia/templates/rooms.hbs\" } });\n});","define(\"trivia/templates/rooms/index\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"5an8eNRg\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"panel panel-default\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"table\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"table\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"thead\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"tr\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"th\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Room Number\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"th\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Status\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"tbody\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"comment\\\",\\\" START: Generate list with Handlebars \\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"tr\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"td\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Dummy Cell\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"td\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"In Progress\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"comment\\\",\\\" END: Generate list with Handlebars \\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\\n\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"outlet\\\"]],false],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"trivia/templates/rooms/index.hbs\" } });\n});","define(\"trivia/templates/rooms/new\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"3pKU+6X7\", \"block\": \"{\\\"statements\\\":[[\\\"append\\\",[\\\"unknown\\\",[\\\"outlet\\\"]],false],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"trivia/templates/rooms/new.hbs\" } });\n});","define('trivia/torii-adapters/application', ['exports', 'emberfire/torii-adapters/firebase'], function (exports, _emberfireToriiAdaptersFirebase) {\n  exports['default'] = _emberfireToriiAdaptersFirebase['default'].extend({});\n});","define('trivia/torii-providers/firebase', ['exports', 'emberfire/torii-providers/firebase'], function (exports, _emberfireToriiProvidersFirebase) {\n  exports['default'] = _emberfireToriiProvidersFirebase['default'];\n});","\n","define('trivia/config/environment', ['ember'], function(Ember) {\n  var prefix = 'trivia';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","if (!runningTests) {\n  require(\"trivia/app\")[\"default\"].create({\"name\":\"trivia\",\"version\":\"0.0.0+5322a472\"});\n}\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdpCA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;;ACDA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;;ACDA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;","file":"trivia.js"}